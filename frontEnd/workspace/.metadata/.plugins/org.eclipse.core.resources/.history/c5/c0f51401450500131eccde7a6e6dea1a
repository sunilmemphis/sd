-- Morning Routine

local storyboard = require ( "storyboard" )
local widget = require( "widget" )

--Create a storyboard scene for this module
local scene = storyboard.newScene()

--Create the scene
function scene:createScene( event )
	local group = self.view
	storyboard.returnTo = "homePage";
	
	-- Set up the background
	local background = display.newImage( "assets/wallpaper.jpg" )
	group:insert( background, true)
	background.isFullResolution = true
	
	local xml = require( "xml" ).newParser()
	local questionnaire = xml:loadFile( "data2.xml")
	print(questionnaire.properties["version"])
	
	-- Get total number of Questions
	local noOfQuestions = (questionnaire.properties["noOfQuestions"])
	-- idiosyncrasies  of loosely typed languages
	local intNoOfQuestions = noOfQuestions + 0
	
	local function scrollListener( event )
		local phase = event.phase
		local direction = event.direction
		
		if "began" == phase then
			--print( "Began" )
		elseif "moved" == phase then
			--print( "Moved" )
		elseif "ended" == phase then
			--print( "Ended" )
		end
		
		-- If the scrollView has reached it's scroll limit
		if event.limitReached then
			if "up" == direction then
				print( "Reached Top Limit" )
			elseif "down" == direction then
				print( "Reached Bottom Limit" )
			elseif "left" == direction then
				print( "Reached Left Limit" )
			elseif "right" == direction then
				print( "Reached Right Limit" )
			end
		end
				
		return true
	end

	-- Create a ScrollView
	local scrollView = widget.newScrollView
	{
		left = 0,
		top = 0,
		width = display.contentWidth,
		height = display.contentHeight,
		bottomPadding = 50,
		id = "onBottom",
		hideBackground = true,
		horizontalScrollDisabled = true,
		verticalScrollDisabled = false,
		listener = scrollListener,
	}
	
	local function fieldHandler( textField )
		return function( event )
			if ( "began" == event.phase ) then
				-- This is the "keyboard has appeared" event
				-- In some cases you may want to adjust the interface when the keyboard appears.
			
			elseif ( "ended" == event.phase ) then
				-- This event is called when the user stops editing a field: for example, when they touch a different field
				
			elseif ( "editing" == event.phase ) then
			
			elseif ( "submitted" == event.phase ) then
				-- This event occurs when the user presses the "return" key (if available) on the onscreen keyboard
				print( textField().text )
				
				-- Hide keyboard
				native.setKeyboardFocus( nil )
			end
		end
	end
	
	
	local i = 1
	local y = 0
	local answer = {};
	while i  <= intNoOfQuestions do
		 print (questionnaire.child[i].child[1].value)
		 local screenText = display.newText( questionnaire.child[i].child[1].value, 0, 0, native.systemFontBold, 18 )
		 screenText:setTextColor( 0 )
		 screenText.x = 100;
		 screenText.y = y;
		 scrollView:insert( screenText )
		 y = y+50
		 answer[i] = native.newTextField( 100, y, display.contentWidth, 40 )
		 answer[i].font = native.newFont( native.systemFontBold, 18 )
		--answer[i] .inputType = "phone"
		 answer[i]:addEventListener( "userInput", fieldHandler( function() return answer[i] end ) ) 
		 answer[i]:setTextColor( 0 )
		 answer[i].x = 100;
		 answer[i].y = y;
		 answer[i].alpha = 0.5 
		 answer[i].align = "center"
		 y=y+70;
		 scrollView:insert( answer[i] )
		 
		 i = i + 1
	end
	
end





--Add the createScene listener
scene:addEventListener( "createScene", scene )

return scene
